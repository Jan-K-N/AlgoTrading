vY = read.csv("/Users/Jan/Desktop/LøstFB.csv")
plot(vY,type = "l")
plot(vY,type = "l")
lFit = arima(vY, order = c(1,0,1))
lFit = arima(vY[,1], order = c(1,0,1))
View(lFit)
lFit$model
lFit
View(lFit)
library(forecast)
plot(fitted(lFit), type = "l")
fitted(lFit)
## Modelling ##
lFit = auto.arima(vY[,1])
fitted(lFit)
View(lFit)
lFit[["fitted"]]
## Modelling ##
lFit = auto.arima(vY[,2])
fitted(lFit)
## Modelling ##
lFit = arima(vY[,2], order = c(1,0,1))
plot(fitted(lFit), type = "l")
lines(vY[,2], col = "red")
## Modelling ##
lFit = auto.arima(vY[,2])
plot(fitted(lFit), type = "l")
## Modelling ##
lFit = auto.arima(vY[,2])
plot(vY[,2])
## Modelling ##
lFit = auto.arima(vY[,2])
plot(vY[,2], type = "l")
lines(fitted(lFit), col = "red")
plot(forecasts(lFit, h=1))
plot(forecast(lFit, h=1))
plot(forecast(lFit, h=20))
## Modelling ##
lFit = auto.arima(vY[,2],seasonal = TRUE,ic = 'aicc')
plot(vY[,2], type = "l")
lines(fitted(lFit), col = "red")
plot(forecast(lFit, h=20))
vY = vY[-1:750,]
vY = vY[-c(1:750),]
plot(vY,type = "l")
vY = vY[-c(1:750),]
plot(vY[,2],type = "l")
View(vY)
vY = read.csv("/Users/Jan/Desktop/LøstFB.csv")
vY = vY[-c(1:700),]
plot(vY[,2],type = "l")
library(forecast)
## Setup ##
vY        = as.numeric(vY)
vForecast = as.numeric() # Vector to store our forecasts in later.
## Modelling ##
lFit = auto.arima(vY[,2],seasonal = TRUE,ic = 'aicc')
plot(vY[,2], type = "l")
lines(fitted(lFit), col = "red")
plot(forecast(lFit, h=20))
## Modelling ##
lFit = auto.arima(vY[,2],seasonal = TRUE,ic = 'aicc')
plot(vY[,2], type = "l")
lines(fitted(lFit), col = "red")
plot(forecast(lFit, h=1))
plot(predict(lFit, h=1))
?window
View(vY)
length(vY)
dim(vY)[1]
for(i in 1:10){
win_y = window(vY, end = (dim(vY)[1] - 10))
fit   = auto.arima(win_y)
vForecast[i] = forecast(fit, h = 1)
}
for(i in 1:10){
fit   = auto.arima(vY)
vForecast[i] = forecast(fit, h = 1)
}
for(i in 1:10){
fit   = auto.arima(vY[,2])
vForecast[i] = forecast(fit, h = 1)
}
View(vForecast)
vForecast[[2]]
for(i in 1:10){
fit   = auto.arima(vY[45 + i,2])
vForecast[i] = forecast(fit, h = 1)
}
View(vForecast)
vForecast[[1]]
for(i in 1:10){
fit   = auto.arima(vY[45 + i,2])
vForecast[i] = forecast(fit, h = 1)$mean
}
View(vForecast)
plot(vForecast, type = l)
View(vForecast)
unlist(vForecast)
for(i in 1:10){
fit   = auto.arima(vY[45 + i,2])
vForecast[i] = unlist(forecast(fit, h = 1)$mean)
}
View(vY)
plot(vY[45:55,2], type = "l")
lines(vForecast[,2], col = "red")
View(vForecast)
for(i in 1:10){
fit   = auto.arima(vY[45 + i,2])
vForecast[i] = unlist(forecast(fit, h = 1)$mean)
}
for(i in 1:10){
fit   = auto.arima(vY[45 + i,2])
vForecast[i] = unlist(forecast(fit, h = 1)$mean)
}
vForecast = unlist(vForecast)
plot(vY[45:55,2], type = "l")
lines(vForecast[], col = "red")
for(i in 1:15){
fit   = auto.arima(vY[45 + i,2])
vForecast[i] = unlist(forecast(fit, h = 1)$mean)
}
for(i in 1:15){
fit   = auto.arima(vY[45 + i - 1,2])
vForecast[i] = unlist(forecast(fit, h = 1)$mean)
}
for(i in 1:10){
fit   = auto.arima(vY[45 + i,2])
vForecast[i] = unlist(forecast(fit, h = 1)$mean)
}
for(i in 1:10){
fit   = auto.arima(vY[i:(45 + i - 1),2])
vForecast[i] = unlist(forecast(fit, h = 1)$mean)
}
vForecast = unlist(vForecast)
plot(vY[45:55,2], type = "l")
lines(vForecast, col = "red")
for(i in 1:10){
vY_in = vY[i:(45 + i - 1),2]
vY_out = vY[(45 + i),2]
fit   = auto.arima(vY[i:(45 + i - 1),2])
vForecast[i]  = predict(fit, X_out)
# vForecast[i] = unlist(forecast(fit, h = 1)$mean)
}
for(i in 1:10){
vY_in = vY[i:(45 + i - 1),2]
vY_out = vY[(45 + i),2]
fit   = auto.arima(vY[i:(45 + i - 1),2])
vForecast[i]  = predict(fit, vY_out)
# vForecast[i] = unlist(forecast(fit, h = 1)$mean)
}
View(vForecast)
vForecast[[2]]
for(i in 1:10){
vY_in = vY[i:(45 + i - 1),2]
vY_out = vY[(45 + i),2]
fit   = auto.arima(vY[i:(45 + i - 1),2])
vForecast[i]  = predict(fit, vY_out, n.ahed = 1)
# vForecast[i] = unlist(forecast(fit, h = 1)$mean)
}
View(vForecast)
for(i in 1:11){
vY_in = vY[i:(45 + i - 1),2]
vY_out = vY[(45 + i),2]
fit   = auto.arima(vY[i:(45 + i - 1),2])
vForecast[i]  = predict(fit, vY_out, n.ahed = 1)
# vForecast[i] = unlist(forecast(fit, h = 1)$mean)
}
View(vForecast)
for(i in 1:11){
vY_in = vY[i:(45 + i - 1),2]
vY_out = vY[(45 + i),2]
fit   = auto.arima(vY[i:(45 + i - 1),2])
vForecast[i]  = predict(fit, vY_out, n.ahed = 2)
# vForecast[i] = unlist(forecast(fit, h = 1)$mean)
}
View(vForecast)
for(i in 1:11){
vY_in = vY[i:(45 + i - 1),2]
vY_out = vY[(45 + i),2]
fit   = auto.arima(vY[i:(45 + i - 1),2])
vForecast[i]  = predict(fit, vY_out, n.ahead = 2)
# vForecast[i] = unlist(forecast(fit, h = 1)$mean)
}
for(i in 1:11){
vY_in = vY[i:(45 + i - 1),2]
vY_out = vY[(45 + i),2]
fit   = auto.arima(vY[i:(45 + i - 1),2])
vForecast[i]  = predict(fit, vY_out, n = 2)
# vForecast[i] = unlist(forecast(fit, h = 1)$mean)
}
for(i in 1:11){
vY_in = vY[i:(45 + i - 1),2]
vY_out = vY[(45 + i),2]
fit   = auto.arima(vY[i:(45 + i - 1),2])
vForecast[i]  = predict(fit, vY_out, h = 2)
# vForecast[i] = unlist(forecast(fit, h = 1)$mean)
}
View(vForecast)
T         = length(vY)
T         = length(vY)[2]
T         = length(vY[,2])
T - w_size
w_size = 5
T - w_size
for(i in 0:iEval){
lFit = auto.arima(vY[1:(w_size+i),2])
vForecast[i] = forecast(lFit, h = 1)
}
iEval     = T - w_size
for(i in 0:iEval){
lFit = auto.arima(vY[1:(w_size+i),2])
vForecast[i] = forecast(lFit, h = 1)
}
library(forecast)
for(i in 0:iEval){
lFit = auto.arima(vY[1:(w_size+i),2])
vForecast[i] = forecast(lFit, h = 1)
}
View(vForecast)
for(i in 0:iEval){
lFit = auto.arima(vY[1:(w_size+i),2])
vForecast[i] = forecast(lFit, h = 1)$mean
}
View(vForecast)
plot(vY[w:size:55,2], type = 'l')
plot(vY[w_size:55,2], type = 'l')
plot(vY[w_size:55,2], type = 'l')
unlist(vForecast)
lines(unlist(vForecast), col = "red")
vY = read.csv("/Users/Jan/Desktop/LøstFB.csv")
plot(vY[,2],type = "l")
## Setup ##
vY        = as.numeric(vY)
vForecast = as.numeric() # Vector to store our forecasts in later.
T         = length(vY[,2])
iEval     = T - w_size # Number of observations left to be forecasted.
T         = length(vY[,2])
iEval     = T - w_size # Number of observations left to be forecasted.
for(i in 0:iEval){
lFit = auto.arima(vY[1:(w_size+i),2])
vForecast[i] = forecast(lFit, h = 1)$mean
}
plot(vY[w_size:T,2], type = 'l')
lines(vForecast, col = "red")
iEval/2
lFit = auto.arima(vY[1:(w_size),2])
vForecast[i] = forecast(lFit, h = 1)$mean
plot(vY[w_size:T,2], type = 'l')
lines(vForecast, col = "red")
lFit
vY[1:(w_size),2]
w_size = 500
lFit = auto.arima(vY[1:(w_size),2])
vForecast[i] = forecast(lFit, h = 1)$mean
i
lFit = auto.arima(vY[1:(w_size),2])
vForecast = forecast(lFit, h = 1)$mean
vForecast
lFit = auto.arima(vY[1:(w_size),2])
vForecast = forecast(lFit, h = 1)$mean
plot(vY[1:w_size,2], type = 'l')
?points
points(vForecast)
lFit = auto.arima(vY[1:(w_size),2])
vForecast = forecast(lFit, h = 10)$mean
plot(vY[1:w_size,2], type = 'l')
points(vForecast)
View(vY)
